name: RobotFramework

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Update dependencies
      run: |
        sudo apt-get update
    - name: Install Firefox & Geckodriver
      run: |
        sudo apt install wget
        sudo wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb
        sudo apt-get install -f
        google-chrome --version
        sudo wget https://chromedriver.storage.googleapis.com/92.0.4515.107/chromedriver_linux64.zip
        sudo unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/bin/chromedriver
        sudo chown root:root /usr/bin/chromedriver
        sudo chmod +x /usr/bin/chromedriver
        chromedriver --url-base=/wd/hub


    - name: Install Robot Framework and Selenium
      run: |    
        python3 -m pip install --upgrade pip==23.3.1
        pip install robotframework robotframework-seleniumlibrary robotframework-pabot
        
        
    - name: Run Robot Framework tests
      run: |
        pabot -d ./output/ -i Test2 .
      # Define the artifacts to upload
      # The `output` directory will be uploaded as an artifact
      # after the tests have run
      # You can add more directories or files if needed
      # Use `*` for wildcard matching

      if: always()
      continue-on-error: true
      # If the robot tests fail, don't fail the build to
      # ensure artifacts are still uploaded
      env:
        ROBOT_EXIT_ON_FAILURE: false
      # Set ROBOT_EXIT_ON_FAILURE to false to continue execution
      # even if a test case fails
    - name: Upload test artifacts
      uses: actions/upload-artifact@v2
      with:
        name: robot-output
        path: ./output